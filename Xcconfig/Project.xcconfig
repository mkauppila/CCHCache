
GCC_TREAT_WARNINGS_AS_ERRORS = YES

WARNING_CFLAGS = -Wall -Wconversion -Wdeprecated-implementations -Werror -Wextra -Wfloat-equal -Wimplicit-retain-self -Wnewline-eof -Wshadow -Wsign-compare -Wundef

CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES
CLANG_WARN_BOOL_CONVERSION = YES
CLANG_WARN_CONSTANT_CONVERSION = YES
CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES
CLANG_WARN__DUPLICATE_METHOD_MATCH = YES
CLANG_WARN_EMPTY_BODY = YES
CLANG_WARN_ENUM_CONVERSION = YES
CLANG_WARN_IMPLICIT_SIGN_CONVERSION = NO
CLANG_WARN_INT_CONVERSION = YES
CLANG_WARN_OBJC_REPEATED_USE_OF_WEAK = NO
CLANG_WARN_OBJC_ROOT_CLASS = YES
CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION = YES
GCC_WARN_MISSING_PARENTHESES = YES
GCC_WARN_CHECK_SWITCH_STATEMENTS = YES
GCC_WARN_UNUSED_FUNCTION = YES
GCC_WARN_UNUSED_LABEL = YES
GCC_WARN_UNUSED_VARIABLE = YES
GCC_WARN_UNDECLARED_SELECTOR = YES
GCC_WARN_SIGN_COMPARE = YES
GCC_WARN_64_TO_32_BIT_CONVERSION = YES

RUN_CLANG_STATIC_ANALYZER = YES

CLANG_ANALYZER_SECURITY_FLOATLOOPCOUNTER = YES
// Whether to warn about use of rand() and random() being used instead of arc4random()
CLANG_ANALYZER_SECURITY_INSECUREAPI_RAND = YES
// Whether to warn about strcpy() and strcat()
CLANG_ANALYZER_SECURITY_INSECUREAPI_STRCPY = YES
